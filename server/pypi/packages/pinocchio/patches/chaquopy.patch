diff --git a/CMakeLists.txt b/CMakeLists.txt
index df25fb61..ffccd380 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -87,6 +87,26 @@ include("${JRL_CMAKE_MODULES}/base.cmake")
 compute_project_args(PROJECT_ARGS LANGUAGES CXX)
 project(${PROJECT_NAME} ${PROJECT_ARGS})
 
+# eigen3
+set(Eigen3_DIR "/usr/share/eigen3/cmake")
+
+# urdfdom_headers
+set(urdfdom_headers_DIR "/usr/share/urdfdom_headers/cmake")
+# urdfdom
+set(urdfdom_DIR "/usr/lib/x86_64-linux-gnu/urdfdom/cmake")
+
+# boost
+# set(BOOST_ROOT "/home/ubuntu/workspace/pkg/boost_1_87_0")
+# set(Boost_NO_SYSTEM_PATHS ON)
+set(Boost_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/Boost-1.87.0")
+set(boost_headers_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_headers-1.87.0")
+set(boost_filesystem_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_filesystem-1.87.0")
+set(boost_atomic_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_atomic-1.87.0")
+set(boost_system_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_system-1.87.0")
+set(boost_serialization_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_serialization-1.87.0")
+
+set(PYTHON_EXECUTABLE "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/env/bin/python3.9")
+
 include("${JRL_CMAKE_MODULES}/python.cmake")
 include("${JRL_CMAKE_MODULES}/boost.cmake")
 include("${JRL_CMAKE_MODULES}/ide.cmake")
Submodule cmake contains modified content
diff --git a/cmake/python.cmake b/cmake/python.cmake
index 0053bcb..1881148 100644
--- a/cmake/python.cmake
+++ b/cmake/python.cmake
@@ -94,7 +94,7 @@ macro(FINDPYTHON)
       endif()
     endif()
   endif()
-
+  message(--------------------------CMAKE_VERSION = ${CMAKE_VERSION})
   if(NOT CMAKE_VERSION VERSION_LESS "3.12")
     if(
       DEFINED PYTHON_EXECUTABLE
@@ -119,7 +119,7 @@ macro(FINDPYTHON)
       # Search for the default python of the system, if exists
       find_program(PYTHON_EXECUTABLE python)
     endif()
-
+    message(--------------------------PYTHON_EXECUTABLE = ${PYTHON_EXECUTABLE})
     if(PYTHON_EXECUTABLE)
       if(NOT EXISTS ${PYTHON_EXECUTABLE})
         message(
@@ -179,9 +179,10 @@ macro(FINDPYTHON)
 
       if(SEARCH_FOR_NUMPY)
         FIND_NUMPY()
-        set(Python_NumPy_INCLUDE_DIR ${NUMPY_INCLUDE_DIRS})
+        # todo xiao
+        # set(Python_NumPy_INCLUDE_DIR ${NUMPY_INCLUDE_DIRS})
       endif()
-
+      message(--------------------------python version = Python${_PYTHON_VERSION_MAJOR})
       find_package(
         "Python${_PYTHON_VERSION_MAJOR}"
         REQUIRED
@@ -563,38 +564,46 @@ endmacro(DYNAMIC_GRAPH_PYTHON_MODULE SUBMODULENAME)
 #
 
 macro(FIND_NUMPY)
-  # Detect numpy.
-  message(STATUS "Checking for NumPy")
-  execute_process(
-    COMMAND "${PYTHON_EXECUTABLE}" "-c" "import numpy; print (True)"
-    OUTPUT_VARIABLE IS_NUMPY
-    ERROR_QUIET
-  )
-  if(NOT IS_NUMPY)
-    message(FATAL_ERROR "Failed to detect numpy")
-  else()
-    if(NOT NUMPY_INCLUDE_DIRS)
-      execute_process(
-        COMMAND
-          "${PYTHON_EXECUTABLE}" "-c"
-          "import numpy; print (numpy.get_include())"
-        OUTPUT_VARIABLE NUMPY_INCLUDE_DIRS
-        ERROR_QUIET
-      )
-      string(REGEX REPLACE "\n$" "" NUMPY_INCLUDE_DIRS "${NUMPY_INCLUDE_DIRS}")
-      file(TO_CMAKE_PATH "${NUMPY_INCLUDE_DIRS}" NUMPY_INCLUDE_DIRS)
-    endif()
-    message(STATUS "  NUMPY_INCLUDE_DIRS=${NUMPY_INCLUDE_DIRS}")
-    # Retrive NUMPY_VERSION
-    execute_process(
-      COMMAND
-        "${PYTHON_EXECUTABLE}" "-c" "import numpy; print (numpy.__version__)"
-      OUTPUT_VARIABLE NUMPY_VERSION
-      ERROR_QUIET
-    )
-    string(REGEX REPLACE "\n$" "" NUMPY_VERSION "${NUMPY_VERSION}")
-    message(STATUS "  NUMPY_VERSION=${NUMPY_VERSION}")
-  endif()
+  set(NUMPY_INCLUDE_DIRS "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/requirements/numpy/core/include")
+  set(Python_NumPy_INCLUDE_DIRS "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/requirements/numpy/core/include")
+  set(Python3_NumPy_INCLUDE_DIRS "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/requirements/numpy/core/include")
+  message(---------------------------NUMPY_INCLUDE_DIRS = ${NUMPY_INCLUDE_DIRS})
+  add_library(Python::NumPy INTERFACE IMPORTED)
+  target_include_directories(Python::NumPy SYSTEM INTERFACE ${Python_NumPy_INCLUDE_DIRS})
+  set(Python_NumPy_FOUND TRUE CACHE BOOL "" FORCE)
+  # # Detect numpy.
+  # message(STATUS "Checking for NumPy")
+  # execute_process(
+  #   COMMAND "${PYTHON_EXECUTABLE}" "-c" "import numpy; print (True)"
+  #   OUTPUT_VARIABLE IS_NUMPY
+  #   # ERROR_QUIET
+  #   ERROR_VARIABLE APPLY_ERROR
+  # )
+  # if(NOT IS_NUMPY)
+  #   message(FATAL_ERROR "Failed to detect numpy---error: ${APPLY_ERROR}")
+  # else()
+  #   if(NOT NUMPY_INCLUDE_DIRS)
+  #     execute_process(
+  #       COMMAND
+  #         "${PYTHON_EXECUTABLE}" "-c"
+  #         "import numpy; print (numpy.get_include())"
+  #       OUTPUT_VARIABLE NUMPY_INCLUDE_DIRS
+  #       ERROR_QUIET
+  #     )
+  #     string(REGEX REPLACE "\n$" "" NUMPY_INCLUDE_DIRS "${NUMPY_INCLUDE_DIRS}")
+  #     file(TO_CMAKE_PATH "${NUMPY_INCLUDE_DIRS}" NUMPY_INCLUDE_DIRS)
+  #   endif()
+  #   message(STATUS "  NUMPY_INCLUDE_DIRS=${NUMPY_INCLUDE_DIRS}")
+  #   # Retrive NUMPY_VERSION
+  #   execute_process(
+  #     COMMAND
+  #       "${PYTHON_EXECUTABLE}" "-c" "import numpy; print (numpy.__version__)"
+  #     OUTPUT_VARIABLE NUMPY_VERSION
+  #     ERROR_QUIET
+  #   )
+  #   string(REGEX REPLACE "\n$" "" NUMPY_VERSION "${NUMPY_VERSION}")
+  #   message(STATUS "  NUMPY_VERSION=${NUMPY_VERSION}")
+  # endif()
 endmacro()
 
 # .rst: .. command:: FIND_SCIPY()
diff --git a/setup.py b/setup.py
index f087be4d..4f25caca 100644
--- a/setup.py
+++ b/setup.py
@@ -65,6 +65,9 @@ class CMakeBuildExt(build_ext):
             f"-DBOOST_ROOT={boost_root}",
             f"-DBoost_NO_SYSTEM_PATHS=ON",
             
+            # eigen3
+            f"-DEigen3_DIR=/usr/share/eigen3/cmake"
+            
             # 强制使用动态链接库
             "-DBoost_USE_STATIC_LIBS=OFF",
             "-DBoost_USE_STATIC_RUNTIME=OFF"
@@ -91,7 +94,7 @@ setup(
     description="Efficient Rigid Body Dynamics Library",
     author="Pinocchio Contributors",
     license="BSD-2-Clause",
-    packages=["pinocchio"],
+    packages=["bindings/python/pinocchio"],
     python_requires=">=3.6",
     install_requires=["numpy"],
     ext_modules=[Extension("pinocchio_dummy", [])],  # 触发扩展构建
