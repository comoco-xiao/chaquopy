diff --git a/CMakeLists.txt b/CMakeLists.txt
index df25fb61..eae4d805 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -87,6 +87,26 @@ include("${JRL_CMAKE_MODULES}/base.cmake")
 compute_project_args(PROJECT_ARGS LANGUAGES CXX)
 project(${PROJECT_NAME} ${PROJECT_ARGS})
 
+# eigen3
+set(Eigen3_DIR "/usr/share/eigen3/cmake")
+
+# urdfdom_headers
+set(urdfdom_headers_DIR "/usr/share/urdfdom_headers/cmake")
+# urdfdom
+set(urdfdom_DIR "/usr/lib/x86_64-linux-gnu/urdfdom/cmake")
+
+# boost
+# set(BOOST_ROOT "/home/ubuntu/workspace/pkg/boost_1_87_0")
+# set(Boost_NO_SYSTEM_PATHS ON)
+set(Boost_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/Boost-1.87.0")
+set(boost_headers_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_headers-1.87.0")
+set(boost_filesystem_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_filesystem-1.87.0")
+set(boost_atomic_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_atomic-1.87.0")
+set(boost_system_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_system-1.87.0")
+set(boost_serialization_DIR "/home/ubuntu/workspace/pkg/boost_1_87_0/lib/cmake/boost_serialization-1.87.0")
+
+set(PYTHON_EXECUTABLE "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/env/bin/python3.9")
+
 include("${JRL_CMAKE_MODULES}/python.cmake")
 include("${JRL_CMAKE_MODULES}/boost.cmake")
 include("${JRL_CMAKE_MODULES}/ide.cmake")
@@ -298,7 +318,8 @@ if(BUILD_PYTHON_INTERFACE)
       "The Python bindings of Pinocchio will be compiled along the main library. If you want to disable this feature, please set the option BUILD_PYTHON_INTERFACE to OFF."
   )
 
-  set(PYTHON_COMPONENTS Interpreter Development NumPy)
+  # todo xiao
+  # set(PYTHON_COMPONENTS Interpreter Development NumPy)
   findpython(REQUIRED)
   add_project_dependency(eigenpy 2.7.10 REQUIRED)
 
Submodule cmake contains modified content
diff --git a/cmake/python.cmake b/cmake/python.cmake
index 0053bcb..a3735f6 100644
--- a/cmake/python.cmake
+++ b/cmake/python.cmake
@@ -56,6 +56,21 @@
 # `FIND_NUMPY` and/or `SEARCH_FOR_BOOST_PYTHON` if necessary.
 
 macro(FINDPYTHON)
+  # todo xiao
+  message(-----------------------------FINDPYTHON---1)
+  find_package(Python COMPONENTS ${PYTHON_COMPONENTS})
+  message(-----------------------------FINDPYTHON---2)
+  # numpy
+  set(Python_NumPy_INCLUDE_DIRS "/home/ubuntu/workspace/chaquopy/server/pypi/packages/pinocchio/build/3.4.0/cp39-cp39-android_28_arm64_v8a/requirements/numpy/core/include")
+  add_library(Python::NumPy INTERFACE IMPORTED)
+  target_include_directories(Python::NumPy SYSTEM INTERFACE ${Python_NumPy_INCLUDE_DIRS})
+  set(Python_NumPy_FOUND TRUE CACHE BOOL "" FORCE)
+  message(-----------------------------FINDPYTHON---3)
+  message(-----------------------------FINDPYTHON---Python_Development.Module_FOUND = ${Python_Development.Module_FOUND})
+  message(-----------------------------FINDPYTHON---Python_NumPy_FOUND = ${Python_NumPy_FOUND})
+  return()
+  message(-----------------------------FINDPYTHON---4)
+
   if(DEFINED FINDPYTHON_ALREADY_CALLED)
     message(
       AUTHOR_WARNING
diff --git a/setup.py b/setup.py
index f087be4d..4f25caca 100644
--- a/setup.py
+++ b/setup.py
@@ -65,6 +65,9 @@ class CMakeBuildExt(build_ext):
             f"-DBOOST_ROOT={boost_root}",
             f"-DBoost_NO_SYSTEM_PATHS=ON",
             
+            # eigen3
+            f"-DEigen3_DIR=/usr/share/eigen3/cmake"
+            
             # 强制使用动态链接库
             "-DBoost_USE_STATIC_LIBS=OFF",
             "-DBoost_USE_STATIC_RUNTIME=OFF"
@@ -91,7 +94,7 @@ setup(
     description="Efficient Rigid Body Dynamics Library",
     author="Pinocchio Contributors",
     license="BSD-2-Clause",
-    packages=["pinocchio"],
+    packages=["bindings/python/pinocchio"],
     python_requires=">=3.6",
     install_requires=["numpy"],
     ext_modules=[Extension("pinocchio_dummy", [])],  # 触发扩展构建
