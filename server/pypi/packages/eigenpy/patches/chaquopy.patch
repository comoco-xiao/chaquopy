diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2d6360c..9ce530a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -128,7 +128,9 @@ else()
   set(PYTHON_COMPONENTS Interpreter Development.Module NumPy)
 endif()
 set(PYTHON_EXPORT_DEPENDENCY ON)
+message(-----------------------------CMakeLists---1)
 findpython(REQUIRED)
+message(-----------------------------CMakeLists---2)
 
 if(${NUMPY_VERSION} VERSION_LESS "1.16.0")
   set(NUMPY_WITH_BROKEN_UFUNC_SUPPORT TRUE)
diff --git a/setup.py b/setup.py
index ffea7f0..ba719ce 100644
--- a/setup.py
+++ b/setup.py
@@ -6,7 +6,7 @@ from setuptools import setup, Extension
 from setuptools.command.build_ext import build_ext
 
 PROJECT_DIR = Path(__file__).parent
-VERSION = "3.4.0"
+VERSION = "3.10.3"
 
 class CMakeBuildExt(build_ext):
     """集成 CMake 编译流程"""
@@ -15,15 +15,21 @@ class CMakeBuildExt(build_ext):
     ]
 
     def initialize_options(self):
+        print("-------------------------------------initialize_options---1")
         super().initialize_options()
+        print("-------------------------------------initialize_options---2")
         self.build_type = "Release"
+        print("-------------------------------------initialize_options---3")
 
     def finalize_options(self):
         super().finalize_options()
 
     def run(self):
+        print("-------------------------------------run---1")
         self._check_dependencies()
+        print("-------------------------------------run---2")
         self._configure_and_build()
+        print("-------------------------------------run---3")
 
     def _check_dependencies(self):
         """检查编译依赖"""
@@ -49,25 +55,26 @@ class CMakeBuildExt(build_ext):
         # 创建构建目录
         os.makedirs(build_dir, exist_ok=True)
         os.makedirs(install_dir, exist_ok=True)
-    
+        print("-------------------------------------_configure_and_build---1")
         # CMake 配置参数
         cmake_args = [
             f"-DCMAKE_INSTALL_PREFIX={install_dir}",
             f"-DCMAKE_BUILD_TYPE={self.build_type}",
         ]
+        print("-------------------------------------_configure_and_build---2")
         # 生成构建系统
         subprocess.check_call(
             ["cmake", str(PROJECT_DIR)] + cmake_args,
             cwd=str(build_dir), env=os.environ.copy()
         )
-
+        print("-------------------------------------_configure_and_build---3")
         # 编译并安装
         build_args = ["--config", "Release", "-j2"]
         subprocess.check_call(
             ["cmake", "--build", ".", "--target", "install"] + build_args,
             cwd=build_dir,
         )
-        print("-------------------------------------setup---3")
+        print("-------------------------------------_configure_and_build---4")
 
 project_python_home_dir = os.path.join("python", "eigenpy")
 setup(
@@ -76,9 +83,12 @@ setup(
     description="Efficient Rigid Body Dynamics Library",
     author="Xiao",
     license="BSD-2-Clause",
-    packages=[],
+    packages=[
+        "eigenpy"
+        ],
     python_requires=">=3.9",
-    # install_requires=["numpy"],
+    install_requires=["numpy"],
+    ext_modules=[Extension("eigenpy_dummy", [])],  # 触发扩展构建
     cmdclass={"build_ext": CMakeBuildExt},
     zip_safe=False,
     package_dir={"eigenpy": project_python_home_dir},
