diff --git a/CMakeLists.txt b/CMakeLists.txt
index c8af5f00b5c..19e2913cd60 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,6 +22,29 @@ if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
   message(FATAL_ERROR "In-source build are not supported")
 endif()
 
+# --------------------------------- chaquopy begin ------------------------------------
+set(BUILD_CUSTOM_PROTOBUF OFF)
+set(CMAKE_TOOLCHAIN_FILE "/home/ubuntu/workspace/android-sdk/ndk/27.1.12297006/build/cmake/android.toolchain.cmake")
+set(BUILD_TEST OFF)
+set(BUILD_BINARY OFF)
+set(BUILD_LITE_INTERPRETER OFF)
+set(TRACING_BASED OFF)
+set(USE_LIGHTWEIGHT_DISPATCH OFF)
+
+set(BUILD_MOBILE_BENCHMARK OFF)
+set(BUILD_MOBILE_TEST OFF)
+
+set(USE_CUDA OFF)
+
+set(USE_ITT OFF)
+set(USE_GFLAGS OFF)
+set(USE_OPENCV OFF)
+set(USE_MPI OFF)
+
+set(USE_OPENMP OFF)
+set(BUILD_PYTHON ON)
+# --------------------------------- chaquopy end ------------------------------------
+
 # ---[ Project and semantic versioning.
 project(Torch CXX C)
 
@@ -715,7 +738,7 @@ if(INTERN_BUILD_MOBILE)
   else()
     set(INTERN_DISABLE_AUTOGRAD ON)
   endif()
-  set(BUILD_PYTHON OFF)
+  # set(BUILD_PYTHON OFF)
   set(BUILD_FUNCTORCH OFF)
   set(USE_DISTRIBUTED OFF)
   set(NO_API ON)
diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index 1813f4418a2..1b99cd65012 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -863,6 +863,7 @@ if(${Python_VERSION} VERSION_LESS 3.8)
 endif()
 
 # ---[ Python + Numpy
+message(+++++++++++++++++++++++++++++++++++++++++++Dependencies---1---BUILD_PYTHON = ${BUILD_PYTHON})
 if(BUILD_PYTHON)
   if(Python_Development.Module_FOUND)
     if(USE_NUMPY)
@@ -880,6 +881,7 @@ if(BUILD_PYTHON)
     caffe2_update_option(BUILD_PYTHON OFF)
   endif()
 endif()
+message(+++++++++++++++++++++++++++++++++++++++++++Dependencies---2---BUILD_PYTHON = ${BUILD_PYTHON})
 
 # ---[ pybind11
 if(USE_SYSTEM_PYBIND11)
diff --git a/setup.py b/setup.py
index a6a6db7b033..45d3c89e98c 100644
--- a/setup.py
+++ b/setup.py
@@ -483,11 +483,12 @@ def build_deps():
     check_submodules()
     check_pydep("yaml", "pyyaml")
     build_python = not BUILD_LIBTORCH_WHL
+    print(f"++++++++++++++++++++++++++++++++++++---build_python = {build_python}")
     build_pytorch(
         version=version,
         cmake_python_library=cmake_python_library,
         build_python=build_python,
-        rerun_cmake=RERUN_CMAKE,
+        rerun_cmake=True,
         cmake_only=CMAKE_ONLY,
         cmake=cmake,
     )
@@ -1167,7 +1168,15 @@ def main():
         long_description = f.read()
 
     version_range_max = max(sys.version_info[1], 13) + 1
+    
+    # Chaquopy: see package_data below.
+    if os.path.exists("chaquopy"):
+        shutil.rmtree("chaquopy")
+    os.mkdir("chaquopy")
+    os.symlink("../torch/lib", "chaquopy/lib")
+    
     torch_package_data = [
+        'lib/libtorch_global_deps.so',  # Chaquopy: see comment at top of package_data.
         "py.typed",
         "bin/*",
         "test/*",
@@ -1416,6 +1425,9 @@ def main():
     ]
     package_data = {
         "torch": torch_package_data,
+        'chaquopy': [
+            'lib/*.so*'  # See exclude_package_data below.
+        ],
     }
 
     if not BUILD_LIBTORCH_WHL:
@@ -1445,6 +1457,9 @@ def main():
         author="PyTorch Team",
         author_email="packages@pytorch.org",
         python_requires=f">={python_min_version_str}",
+        
+        exclude_package_data={'chaquopy': ['lib/libtorch_global_deps.so']},
+        
         # PyPI package information.
         classifiers=[
             "Development Status :: 5 - Production/Stable",
Submodule third_party/pocketfft contains modified content
diff --git a/third_party/pocketfft/pocketfft_hdronly.h b/third_party/pocketfft/pocketfft_hdronly.h
index 330c3c7..deb60c5 100644
--- a/third_party/pocketfft/pocketfft_hdronly.h
+++ b/third_party/pocketfft/pocketfft_hdronly.h
@@ -156,9 +156,15 @@ template<> struct VLEN<double> { static constexpr size_t val=2; };
 inline void *aligned_alloc(size_t align, size_t size)
   {
   // aligned_alloc() requires that the requested size is a multiple of "align"
-  void *ptr = ::aligned_alloc(align,(size+align-1)&(~(align-1)));
-  if (!ptr) throw std::bad_alloc();
-  return ptr;
+  // void *ptr = ::aligned_alloc(align,(size+align-1)&(~(align-1)));
+  // if (!ptr) throw std::bad_alloc();
+  // return ptr;
+    void *ptr = nullptr;
+    int ret = posix_memalign(&ptr, align, size);
+    if (ret != 0) {
+        throw std::bad_alloc();
+    }
+    return ptr;
   }
 inline void aligned_dealloc(void *ptr)
     { free(ptr); }
diff --git a/torch/CMakeLists.txt b/torch/CMakeLists.txt
index b123023d2fd..5278d5579cf 100644
--- a/torch/CMakeLists.txt
+++ b/torch/CMakeLists.txt
@@ -8,7 +8,7 @@ if(NOT CAFFE2_CMAKE_BUILDING_WITH_MAIN_REPO)
   option(USE_CUDA "Use CUDA" ON)
   set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
 endif()
-
+message(+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+-+----------------BUILD_PYTHON = ${BUILD_PYTHON})
 if(NOT BUILD_PYTHON)
   return()
 endif()
