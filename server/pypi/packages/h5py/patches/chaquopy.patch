diff --git a/pyproject.toml b/pyproject.toml
index d181d5bc..b94de8f4 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,7 +1,7 @@
 [build-system]
 requires = [
     "Cython >=0.29.31,<4",
-    "numpy >=2.0.0, <3",
+    "numpy >=1.23.3, <3",
     "pkgconfig",
     "setuptools >=61",
 ]
diff --git a/setup_build.py b/setup_build.py
index 853216e2..cc217558 100644
--- a/setup_build.py
+++ b/setup_build.py
@@ -86,7 +86,8 @@ class h5py_build_ext(build_ext):
         This is the point at which custom directories, MPI options, etc.
         enter the build process.
         """
-        import numpy
+        # todo xiao
+        # import numpy
 
         settings = COMPILER_SETTINGS.copy()
 
@@ -99,12 +100,16 @@ class h5py_build_ext(build_ext):
             settings['library_dirs'].extend(config.msmpi_lib_dirs)
             settings['libraries'].append('msmpi')
 
-        try:
-            numpy_includes = numpy.get_include()
-        except AttributeError:
-            # if numpy is not installed get the headers from the .egg directory
-            import numpy.core
-            numpy_includes = os.path.join(os.path.dirname(numpy.core.__file__), 'include')
+        # todo xiao
+        # try:
+        #     numpy_includes = numpy.get_include()
+        # except AttributeError:
+        #     # if numpy is not installed get the headers from the .egg directory
+        #     import numpy.core
+        #     numpy_includes = os.path.join(os.path.dirname(numpy.core.__file__), 'include')
+        
+        # Chaquopy
+        numpy_includes = os.path.abspath("../requirements/numpy/core/include")
 
         settings['include_dirs'] += [numpy_includes]
         if config.mpi:
@@ -127,9 +132,13 @@ class h5py_build_ext(build_ext):
 
         from Cython import __version__ as cython_version
         from Cython.Build import cythonize
-        import numpy
+        
+        # todo xiao
+        # import numpy
 
-        complex256_support = hasattr(numpy, 'complex256')
+        # todo xiao
+        # complex256_support = hasattr(numpy, 'complex256')
+        complex256_support = False
 
         # This allows ccache to recognise the files when pip builds in a temp
         # directory. It speeds up repeatedly running tests through tox with
@@ -137,6 +146,11 @@ class h5py_build_ext(build_ext):
         # ccache is not in use.
         os.environ['CCACHE_BASEDIR'] = op.dirname(op.abspath(__file__))
         os.environ['CCACHE_NOHASHDIR'] = '1'
+        
+        # todo xiao
+        os.environ['HDF5_DIR'] = '/home/ubuntu/workspace/pkg/hdf5_linux'
+        # os.environ['HDF5_LIBDIR'] =  '/usr/lib/x86_64-linux-gnu'
+        os.environ['HDF5_INCLUDEDIR'] =  '/home/ubuntu/workspace/pkg/hdf5_linux/include'
 
         # Get configuration from environment variables
         config = BuildConfig.from_env()
@@ -164,7 +178,7 @@ DEF HDF5_VERSION = {config.hdf5_version}
 DEF DIRECT_VFD = {bool(config.direct_vfd)}
 DEF VOL_MIN_HDF5_VERSION = (1,11,5)
 DEF COMPLEX256_SUPPORT = {complex256_support}
-DEF NUMPY_BUILD_VERSION = '{numpy.__version__}'
+DEF NUMPY_BUILD_VERSION = '1.23.3'
 DEF CYTHON_BUILD_VERSION = '{cython_version}'
 """
         write_if_changed(config_file, s)
